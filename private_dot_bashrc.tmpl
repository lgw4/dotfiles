if ((BASH_VERSINFO[0] > 3)); then
    shopt -s autocd
    shopt -s cdspell
    shopt -s dirspell
    shopt -s globstar
fi

# Functions to help us manage paths.  Second argument is the name of the
# path variable to be modified (default: PATH).
# Taken from: https://www.linuxfromscratch.org/blfs/view/svn/postlfs/profile.html
path_remove () {
        local IFS=':'
        local NEWPATH
        local DIR
        local PATHVARIABLE=${2:-PATH}
        for DIR in ${!PATHVARIABLE} ; do
                if [ "$DIR" != "$1" ] ; then
                  NEWPATH=${NEWPATH:+$NEWPATH:}$DIR
                fi
        done
        export $PATHVARIABLE="$NEWPATH"
}

path_prepend () {
        pathremove $1 $2
        local PATHVARIABLE=${2:-PATH}
        export $PATHVARIABLE="$1${!PATHVARIABLE:+:${!PATHVARIABLE}}"
}

path_append () {
        pathremove $1 $2
        local PATHVARIABLE=${2:-PATH}
        export $PATHVARIABLE="${!PATHVARIABLE:+${!PATHVARIABLE}:}$1"
}

export -f path_remove path_prepend path_append

if [[ ! -v VIRTUAL_ENV ]]; then
    # Check for /usr/local/sbin in PATH
    if [[ -d /usr/local/sbin ]]; then
        path_prepend /usr/local/sbin
    fi

    # Check for /usr/local/bin in PATH
    if [[ -d /usr/local/bin ]]; then
        path_prepend /usr/local/bin
    fi

    {{- if (eq .chezmoi.os "darwin") }}
    {{- if (eq .chezmoi.arch "arm64") }}
    # Apple Silicon Homebrew
    if [[ -d "/opt/homebrew" ]]; then
        path_prepend /opt/homebrew/sbin
        path_prepend /opt/homebrew/bin
    fi
    {{- end }}
    if command -v brew >/dev/null 2>&1; then
        export HOMEBREW_ROOT="$(brew --prefix)"
    fi
    {{- end }}
    {{- if (and (eq .chezmoi.os "linux") (eq .chezmoi.osRelease.idLike "debian")) }}
    # Add /sbin and /usr/sbin to PATH on Debian systems
    path_prepend /usr/sbin
    path_prepend /sbin
    {{- end }}
fi

# Import files from $HOME/.bashrc.d
if [[ -d "$HOME"/.bashrc.d ]]; then
    for config in "$HOME"/.bashrc.d/*.bash; do
        [[ -r "$config" ]] || continue
        source "$config"
    done
    unset -v config
fi

# Append to the history file, don't overwrite it
shopt -s histappend

# Save multi-line commands as one command
shopt -s cmdhist

# For setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=10000
HISTFILESIZE=50000

# Don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=erasedups:ignoreboth

# Don't record some commands
export HISTIGNORE="&:[ ]*:exit:ls:bg:fg:history"

# Useful timestamp format
HISTTIMEFORMAT='%F %T '

# Check the window size after each command and, if necessary,
# Update the values of LINES and COLUMNS.
shopt -s checkwinsize

{{- if (eq .chezmoi.os "darwin") }}
# macOS settings
if [[ -d "$HOMEBREW_ROOT" ]] && command -v brew >/dev/null 2>&1; then
    # Set Homebrew Cask default Applications directory
    export HOMEBREW_CASK_OPTS="--appdir=~/Applications"
    # Enable bash-completion with Homebrew
    export BASH_COMPLETION_COMPAT_DIR="$HOMEBREW_ROOT"/etc/bash_completion.d
    if [[ -f "$HOMEBREW_ROOT"/etc/profile.d/bash_completion.sh ]]; then
        source "$HOMEBREW_ROOT"/etc/profile.d/bash_completion.sh
    fi
fi
{{- end }}
{{- if (eq .chezmoi.os "linux") }}
# GNU/Linux settings
if [[ -f /etc/profile.d/bash_completion.sh ]] && ! shopt -oq posix; then
    source /etc/profile.d/bash_completion.sh
elif [[ -f /etc/bash_completion ]] && ! shopt -oq posix; then
    source /etc/bash_completion
fi
{{-end }}

# Enable pipx
if command -v pipx >/dev/null 2>&1; then
    eval "$(register-python-argcomplete pipx)"
fi

# Enable Starship
if command -v starship >/dev/null 2>&1; then
    starship_precmd_user_func="set_win_title"
    eval "$(starship init bash)"
else
    export PROMPT_COMMAND=set_win_title
    export PROMPT_DIRTRIM=1
fi

if command -v direnv >/dev/null 2>&1; then
    eval "$(direnv hook bash)"
fi

# iTerm2 shell integration
if [[ -e "$HOME/.iterm2_shell_integration.bash" ]]; then
    source "$HOME/.iterm2_shell_integration.bash"
fi
