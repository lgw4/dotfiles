#!/usr/bin/env sh
# shellcheck disable=SC2164

# Install dependencies
printf "\nInstalling dependencies…\n"
{{- if eq .chezmoi.os "darwin" }}
brew install autoconf gmp libyaml openssl@1.1 openssl@3 pkg-config python-tk@3.10 python@3.10 \
readline rust sqlite3 tcl-tk xz zlib
{{- else if (and (eq .chezmoi.os "linux") (eq .chezmoi.osRelease.id "fedora")) }}
sudo dnf install -y autoconf bzip2 bzip2-devel gcc gdbm-devel libffi-devel libnsl2-devel \
libuuid-devel libyaml-devel make ncurses-devel openssl-devel patch perl-FindBin pkgconf \
pkgconf-pkg-config python3.10 python3.10-devel python3.10-libs readline-devel rust sqlite \
sqlite-devel tk-devel xz-devel zlib-devel
{{- end }}

# Install goenv
printf "\nInstalling goenv…\n"
{{- if eq .chezmoi.os "darwin" }}
brew install goenv
mkdir "$HOME"/.goenv
{{- else }}
git clone https://github.com/syndbg/goenv.git "$HOME"/.goenv
git clone https://github.com/momo-lab/xxenv-latest.git "$HOME"/.goenv/plugins/xxenv-latest
cd "$HOME"/.goenv && src/configure && make -C src && cd "$HOME"
{{- end }}
chmod 700 "$HOME"/.goenv

# Install nodenv
printf "\nInstalling nodenv…\n"
{{- if eq .chezmoi.os "darwin" }}
brew install nodenv node-build
mkdir "$HOME"/.nodenv
{{- else }}
git clone https://github.com/nodenv/nodenv.git "$HOME"/.nodenv
git clone https://github.com/nodenv/node-build.git "$HOME"/.nodenv/plugins/node-build
git clone https://github.com/nodenv/node-build-update-defs.git "$HOME"/.nodenv/plugins/node-build-update-defs
git clone https://github.com/nodenv/nodenv-default-packages.git "$HOME"/.nodenv/plugins/nodenv-default-packages
git clone https://github.com/momo-lab/xxenv-latest.git "$HOME"/.nodenv/plugins/xxenv-latest
cd "$HOME"/.nodenv && src/configure && make -C src && cd "$HOME"
printf "alks\n" > "$HOME"/.nodenv/default-packages
printf "npmrc\n" >> "$HOME"/.nodenv/default-packages
{{- end }}
chmod 700 "$HOME"/.nodenv


# Install pyenv
printf "\nInstalling pyenv…\n"
{{- if eq .chezmoi.os "darwin" }}
brew install pyenv
mkdir "$HOME"/.pyenv
{{- else }}
git clone https://github.com/pyenv/pyenv.git "$HOME"/.pyenv
cd "$HOME"/.pyenv && src/configure && make -C src && cd "$HOME"
{{- end }}
chmod 700 "$HOME"/.pyenv

# Install rbenv
printf "\nInstalling rbenv…\n"
{{- if eq .chezmoi.os "darwin" }}
brew install rbenv ruby-build
mkdir "$HOME"/.rbenv
{{- else }}
git clone https://github.com/rbenv/rbenv.git "$HOME"/.rbenv
git clone https://github.com/rbenv/ruby-build.git "$HOME"/.rbenv/plugins/ruby-build
git clone https://github.com/momo-lab/xxenv-latest.git "$HOME"/.rbenv/plugins/xxenv-latest
cd "$HOME"/.rbenv && src/configure && make -C src && cd "$HOME"
{{- end }}
chmod 700 "$HOME"/.rbenv

# Install tfenv
printf "\nInstalling tfenv…\n"
{{- if eq .chezmoi.os "darwin" }}
brew install tfenv
printf "trust-tfenv: yes\n" > "$(brew --prefix tfenv)"/use-gpgv
{{- else }}
git clone --depth=1 https://github.com/tfutils/tfenv.git "$HOME"/.tfenv
printf "trust-tfenv: yes\n" > "$HOME"/.tfenv/use-gpgv
chmod 700 "$HOME"/.tfenv
{{- end }}

printf "\nInstallation complete.\n"
